<configuration>

    <!-- Site specific YARN configuration properties -->
    <!-- 配置nodemanager需要启动的辅助服务，如果在yarn上执行mapreduce程序时，需要配置mapreduce_shuffle服务 -->
    <property>
        <!-- A comma separated list of services where service name should only contain a-zA-Z0-9_ and can not start with numbers -->
        <name>yarn.nodemanager.aux-services</name>
        <!-- default:null -->
        <value>mapreduce_shuffle</value>
    </property>

    <!-- 配置resourcemanager的连接host，MR程序会通过该配置知道要连的resourcemanager的host -->
    <property>
        <!-- The hostname of the RM. -->
        <name>yarn.resourcemanager.hostname</name>
        <!-- defualt:0.0.0.0 -->
        <value>resourcemanager</value>
    </property>

    <!-- 配置resourcemanager的连接地址，MR程序会通过该配置知道要连的resourcemanager的地址 -->
    <property>
        <!-- The hostname of the RM. -->
        <name>yarn.resourcemanager.address</name>
        <!-- defualt:0.0.0.0 -->
        <value>resourcemanager:8032</value>
    </property>

    <!-- 配置给yarn应用程序创建的container的classpath，如果不配置的话，默认会带有hadoop集群中common/lib、hdfs/lib、yarn/lib，也就是说，默认情况下，yarn的application执行环境中会带着hdfs、yarn的jar包，所以yarn的application打包时，可以不用带着这些构件 -->
    <property>
        <!-- CLASSPATH for YARN applications. A comma-separated list of CLASSPATH entries. When this value is empty, the following default CLASSPATH for YARN applications would be used. For Linux: $HADOOP_CONF_DIR, $HADOOP_COMMON_HOME/share/hadoop/common/*, $HADOOP_COMMON_HOME/share/hadoop/common/lib/*, $HADOOP_HDFS_HOME/share/hadoop/hdfs/*, $HADOOP_HDFS_HOME/share/hadoop/hdfs/lib/*, $HADOOP_YARN_HOME/share/hadoop/yarn/*, $HADOOP_YARN_HOME/share/hadoop/yarn/lib/* For Windows: %HADOOP_CONF_DIR%, %HADOOP_COMMON_HOME%/share/hadoop/common/*, %HADOOP_COMMON_HOME%/share/hadoop/common/lib/*, %HADOOP_HDFS_HOME%/share/hadoop/hdfs/*, %HADOOP_HDFS_HOME%/share/hadoop/hdfs/lib/*, %HADOOP_YARN_HOME%/share/hadoop/yarn/*, %HADOOP_YARN_HOME%/share/hadoop/yarn/lib/* -->
        <name>yarn.application.classpath</name>
        <!-- default: $HADOOP_CONF_DIR, $HADOOP_COMMON_HOME/share/hadoop/common/*, $HADOOP_COMMON_HOME/share/hadoop/common/lib/*, $HADOOP_HDFS_HOME/share/hadoop/hdfs/*, $HADOOP_HDFS_HOME/share/hadoop/hdfs/lib/*, $HADOOP_YARN_HOME/share/hadoop/yarn/*, $HADOOP_YARN_HOME/share/hadoop/yarn/lib/* -->
        <value>$HADOOP_CONF_DIR, $HADOOP_COMMON_HOME/share/hadoop/common/*, $HADOOP_COMMON_HOME/share/hadoop/common/lib/*, $HADOOP_HDFS_HOME/share/hadoop/hdfs/*, $HADOOP_HDFS_HOME/share/hadoop/hdfs/lib/*, $HADOOP_YARN_HOME/share/hadoop/yarn/*, $HADOOP_YARN_HOME/share/hadoop/yarn/lib/*</value>
    </property>

    <!-- 配置是否检查container使用的虚拟内存数，如果为true，当container使用的虚拟内存数超过配额后，则强制kill该container -->
    <property>
        <!-- Whether virtual memory limits will be enforced for containers. -->
        <name>yarn.nodemanager.vmem-check-enabled</name>
        <!-- default:true -->
        <value>false</value>
    </property>

    <!-- 配置是否检查container使用的物理内存数，如果为true，当container使用的物理内存数超过配额后，则强制kill该container -->
    <property>
        <!-- Whether physical memory limits will be enforced for containers. -->
        <name>yarn.nodemanager.pmem-check-enabled</name>
        <!-- default:true -->
        <value>false</value>
    </property>

    <!-- 配置对每个container请求分配的最小内存数，如果container请求的内存数低于该配置，则把container请求的内存数修改为该配置的值 -->
    <property>
        <!-- The minimum allocation for every container request at the RM in MBs. Memory requests lower than this will be set to the value of this property. Additionally, a node manager that is configured to have less memory than this value will be shut down by the resource manager. -->
        <name>yarn.scheduler.minimum-allocation-mb</name>
        <!-- default:1024 -->
        <value>500</value>
    </property>

    <!-- 配置对每个container请求分配的最大内存数，如果container请求的内存数高于该配置，则会抛出InvalidResourceRequestException异常 -->
    <property>
        <!-- The maximum allocation for every container request at the RM in MBs. Memory requests higher than this will throw an InvalidResourceRequestException. -->
        <name>yarn.scheduler.maximum-allocation-mb</name>
        <!-- default:8192 -->
        <value>2048</value>
    </property>

    <!-- 配置对每个container请求分配的最小cpu核数，如果container请求的cpu核数低于该配置，则把container请求的cpu核数修改为该配置的值 -->
    <property>
        <!-- The minimum allocation for every container request at the RM in terms of virtual CPU cores. Requests lower than this will be set to the value of this property. Additionally, a node manager that is configured to have fewer virtual cores than this value will be shut down by the resource manager. -->
        <name>yarn.scheduler.minimum-allocation-vcores</name>
        <!-- default:1 -->
        <value>1</value>
    </property>

    <!-- 配置对每个container请求分配的最大cpu核数，如果container请求的cpu核数高于该配置，则会抛出InvalidResourceRequestException异常 -->
    <property>
        <!-- The maximum allocation for every container request at the RM in terms of virtual CPU cores. Requests higher than this will throw an InvalidResourceRequestException. -->
        <name>yarn.scheduler.maximum-allocation-vcores</name>
        <!-- default:4 -->
        <value>2</value>
    </property>
</configuration>
